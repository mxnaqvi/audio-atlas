/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("document.addEventListener('DOMContentLoaded', () => {\n  const accessToken = 'BQB-_C9NogVfphuZxzad6tRR3JpkfA7bbevbGstRqly0xWjNkqBskHSyzYk8cmv9PcNBJ_HLBoyPIziZa9eDAmM16J3BWb80BKLQ1zoYfOgEmIh8XSHT';\n\n  // Function to search for an artist\n  async function searchArtist(artistName) {\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(artistName)}&type=artist&limit=1`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      const artists = data.artists.items;\n      if (artists.length > 0) {\n        return artists[0];\n      } else {\n        console.log('Artist not found.');\n        return null;\n      }\n    } catch (error) {\n      console.error('Error searching for artist:', error);\n      return null;\n    }\n  }\n\n  // Function to retrieve artist information\n  async function getArtistInfo(artistId) {\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/artists/${artistId}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      return await response.json();\n    } catch (error) {\n      console.error('Error retrieving artist information:', error);\n      return null;\n    }\n  }\n\n  // Function to retrieve an artist's albums\n  async function getArtistAlbums(artistId) {\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/artists/${artistId}/albums`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      return data.items;\n    } catch (error) {\n      console.error('Error retrieving artist albums:', error);\n      return null;\n    }\n  }\n\n  // Function to retrieve album tracks\n  async function getAlbumTracks(albumId) {\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/albums/${albumId}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      return data.items;\n    } catch (error) {\n      console.error('Error retrieving album tracks:', error);\n      return null;\n    }\n  }\n  async function createFamilyTree(artistName) {\n    const artist = await searchArtist(artistName);\n    if (!artist) return null;\n    console.log('Artist:', artist.name);\n    const albums = await getArtistAlbums(artist.id);\n    if (!albums) return null;\n    const albumList = [];\n    for (const album of albums) {\n      console.log('Album:', album.name);\n      const tracks = await getAlbumTracks(album.id);\n      if (!tracks) continue;\n      const trackList = [];\n      for (const track of tracks) {\n        console.log('Song:', track.name);\n        trackList.push(track.name);\n      }\n      albumList.push({\n        albumName: album.name,\n        tracks: trackList\n      });\n    }\n    return {\n      name: artist.name,\n      albums: albumList\n    };\n  }\n  function clearFamilyTree() {\n    const familyTreeContainer = document.getElementById('familyTree');\n    familyTreeContainer.innerHTML = '';\n  }\n  function displayFamilyTree(data) {\n    clearFamilyTree();\n    const familyTreeContainer = document.getElementById('familyTree');\n    if (data) {\n      const artistName = document.createElement('h2');\n      artistName.textContent = data.name;\n      familyTreeContainer.appendChild(artistName);\n      const albumsList = document.createElement('ul');\n      for (const album of data.albums) {\n        const albumItem = document.createElement('li');\n        albumItem.textContent = album.albumName;\n        const tracksList = document.createElement('ul');\n        for (const track of album.tracks) {\n          const trackItem = document.createElement('li');\n          trackItem.textContent = track;\n          tracksList.appendChild(trackItem);\n        }\n        albumItem.appendChild(tracksList);\n        albumsList.appendChild(albumItem);\n      }\n      familyTreeContainer.appendChild(albumsList);\n    } else {\n      const errorText = document.createElement('p');\n      errorText.textContent = 'Artist not found.';\n      familyTreeContainer.appendChild(errorText);\n    }\n  }\n\n  // Get the DOM elements\n  const artistNameInput = document.getElementById('artistNameInput');\n  const searchButton = document.getElementById('searchButton');\n\n  // Add event listener to the search button\n  searchButton.addEventListener('click', async () => {\n    const artistName = artistNameInput.value;\n    if (artistName) {\n      const data = await createFamilyTree(artistName);\n      displayFamilyTree(data);\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hdWRpby1hdGxhcy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;